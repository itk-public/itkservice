<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itk.payment.mapper.RefundFlowMapper" >
  <resultMap id="BaseResultMap" type="com.itk.payment.model.RefundFlow" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="flow_id" property="flowId" jdbcType="VARCHAR" />
    <result column="purchase_id" property="purchaseId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="shop_id" property="shopId" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="promotion_status" property="promotionStatus" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="complete_time" property="completeTime" jdbcType="TIMESTAMP" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="reject_reason" property="rejectReason" jdbcType="VARCHAR" />
    <result column="reject_reason_received" property="rejectReasonReceived" jdbcType="VARCHAR" />
    <result column="express_company" property="expressCompany" jdbcType="VARCHAR" />
    <result column="express_no" property="expressNo" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, flow_id, purchase_id, order_id, shop_id, type, promotion_status, status, create_time,
    create_by, complete_time, reason, address, remark, reject_reason, reject_reason_received,
    express_company, express_no
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.itk.payment.model.RefundFlowExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_refund_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from t_refund_flow
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_refund_flow
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.itk.payment.model.RefundFlowExample" >
    delete from t_refund_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itk.payment.model.RefundFlow" >
    insert into t_refund_flow (id, flow_id, purchase_id,
    order_id, shop_id, type,
    promotion_status, status, create_time,
    create_by, complete_time, reason,
    address, remark, reject_reason,
    reject_reason_received, express_company, express_no
    )
    values (#{id,jdbcType=BIGINT}, #{flowId,jdbcType=VARCHAR}, #{purchaseId,jdbcType=VARCHAR},
    #{orderId,jdbcType=VARCHAR}, #{shopId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER},
    #{promotionStatus,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
    #{createBy,jdbcType=VARCHAR}, #{completeTime,jdbcType=TIMESTAMP}, #{reason,jdbcType=VARCHAR},
    #{address,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{rejectReason,jdbcType=VARCHAR},
    #{rejectReasonReceived,jdbcType=VARCHAR}, #{expressCompany,jdbcType=VARCHAR}, #{expressNo,jdbcType=VARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.itk.payment.model.RefundFlow" useGeneratedKeys="true" keyProperty="id">
    insert into t_refund_flow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="flowId != null" >
        flow_id,
      </if>
      <if test="purchaseId != null" >
        purchase_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="promotionStatus != null" >
        promotion_status,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="completeTime != null" >
        complete_time,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="rejectReason != null" >
        reject_reason,
      </if>
      <if test="rejectReasonReceived != null" >
        reject_reason_received,
      </if>
      <if test="expressCompany != null" >
        express_company,
      </if>
      <if test="expressNo != null" >
        express_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="flowId != null" >
        #{flowId,jdbcType=VARCHAR},
      </if>
      <if test="purchaseId != null" >
        #{purchaseId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="promotionStatus != null" >
        #{promotionStatus,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="completeTime != null" >
        #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="rejectReason != null" >
        #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="rejectReasonReceived != null" >
        #{rejectReasonReceived,jdbcType=VARCHAR},
      </if>
      <if test="expressCompany != null" >
        #{expressCompany,jdbcType=VARCHAR},
      </if>
      <if test="expressNo != null" >
        #{expressNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itk.payment.model.RefundFlowExample" resultType="java.lang.Integer" >
    select count(*) from t_refund_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_refund_flow
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.flowId != null" >
        flow_id = #{record.flowId,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseId != null" >
        purchase_id = #{record.purchaseId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.promotionStatus != null" >
        promotion_status = #{record.promotionStatus,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.completeTime != null" >
        complete_time = #{record.completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.rejectReason != null" >
        reject_reason = #{record.rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="record.rejectReasonReceived != null" >
        reject_reason_received = #{record.rejectReasonReceived,jdbcType=VARCHAR},
      </if>
      <if test="record.expressCompany != null" >
        express_company = #{record.expressCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.expressNo != null" >
        express_no = #{record.expressNo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_refund_flow
    set id = #{record.id,jdbcType=BIGINT},
    flow_id = #{record.flowId,jdbcType=VARCHAR},
    purchase_id = #{record.purchaseId,jdbcType=VARCHAR},
    order_id = #{record.orderId,jdbcType=VARCHAR},
    shop_id = #{record.shopId,jdbcType=BIGINT},
    type = #{record.type,jdbcType=INTEGER},
    promotion_status = #{record.promotionStatus,jdbcType=INTEGER},
    status = #{record.status,jdbcType=INTEGER},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    create_by = #{record.createBy,jdbcType=VARCHAR},
    complete_time = #{record.completeTime,jdbcType=TIMESTAMP},
    reason = #{record.reason,jdbcType=VARCHAR},
    address = #{record.address,jdbcType=VARCHAR},
    remark = #{record.remark,jdbcType=VARCHAR},
    reject_reason = #{record.rejectReason,jdbcType=VARCHAR},
    reject_reason_received = #{record.rejectReasonReceived,jdbcType=VARCHAR},
    express_company = #{record.expressCompany,jdbcType=VARCHAR},
    express_no = #{record.expressNo,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itk.payment.model.RefundFlow" >
    update t_refund_flow
    <set >
      <if test="flowId != null" >
        flow_id = #{flowId,jdbcType=VARCHAR},
      </if>
      <if test="purchaseId != null" >
        purchase_id = #{purchaseId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="promotionStatus != null" >
        promotion_status = #{promotionStatus,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="completeTime != null" >
        complete_time = #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="rejectReason != null" >
        reject_reason = #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="rejectReasonReceived != null" >
        reject_reason_received = #{rejectReasonReceived,jdbcType=VARCHAR},
      </if>
      <if test="expressCompany != null" >
        express_company = #{expressCompany,jdbcType=VARCHAR},
      </if>
      <if test="expressNo != null" >
        express_no = #{expressNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itk.payment.model.RefundFlow" >
    update t_refund_flow
    set flow_id = #{flowId,jdbcType=VARCHAR},
    purchase_id = #{purchaseId,jdbcType=VARCHAR},
    order_id = #{orderId,jdbcType=VARCHAR},
    shop_id = #{shopId,jdbcType=BIGINT},
    type = #{type,jdbcType=INTEGER},
    promotion_status = #{promotionStatus,jdbcType=INTEGER},
    status = #{status,jdbcType=INTEGER},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    create_by = #{createBy,jdbcType=VARCHAR},
    complete_time = #{completeTime,jdbcType=TIMESTAMP},
    reason = #{reason,jdbcType=VARCHAR},
    address = #{address,jdbcType=VARCHAR},
    remark = #{remark,jdbcType=VARCHAR},
    reject_reason = #{rejectReason,jdbcType=VARCHAR},
    reject_reason_received = #{rejectReasonReceived,jdbcType=VARCHAR},
    express_company = #{expressCompany,jdbcType=VARCHAR},
    express_no = #{expressNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>