<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itk.payment.mapper.RefundHistoryMapper" >
  <resultMap id="BaseResultMap" type="com.itk.payment.model.RefundHistory" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="refund_flow_id" property="refundFlowId" jdbcType="VARCHAR" />
    <result column="operate_id" property="operateId" jdbcType="INTEGER" />
    <result column="operator_type_id" property="operatorTypeId" jdbcType="INTEGER" />
    <result column="operate_detail" property="operateDetail" jdbcType="VARCHAR" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, refund_flow_id, operate_id, operator_type_id, operate_detail, comment, create_by, 
    create_time, update_by, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.itk.payment.model.RefundHistoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_refund_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_refund_history
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_refund_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.itk.payment.model.RefundHistoryExample" >
    delete from t_refund_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itk.payment.model.RefundHistory" >
    insert into t_refund_history (id, refund_flow_id, operate_id, 
      operator_type_id, operate_detail, comment, 
      create_by, create_time, update_by, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{refundFlowId,jdbcType=VARCHAR}, #{operateId,jdbcType=INTEGER}, 
      #{operatorTypeId,jdbcType=INTEGER}, #{operateDetail,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.itk.payment.model.RefundHistory" >
    insert into t_refund_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="refundFlowId != null" >
        refund_flow_id,
      </if>
      <if test="operateId != null" >
        operate_id,
      </if>
      <if test="operatorTypeId != null" >
        operator_type_id,
      </if>
      <if test="operateDetail != null" >
        operate_detail,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="refundFlowId != null" >
        #{refundFlowId,jdbcType=VARCHAR},
      </if>
      <if test="operateId != null" >
        #{operateId,jdbcType=INTEGER},
      </if>
      <if test="operatorTypeId != null" >
        #{operatorTypeId,jdbcType=INTEGER},
      </if>
      <if test="operateDetail != null" >
        #{operateDetail,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itk.payment.model.RefundHistoryExample" resultType="java.lang.Integer" >
    select count(*) from t_refund_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_refund_history
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.refundFlowId != null" >
        refund_flow_id = #{record.refundFlowId,jdbcType=VARCHAR},
      </if>
      <if test="record.operateId != null" >
        operate_id = #{record.operateId,jdbcType=INTEGER},
      </if>
      <if test="record.operatorTypeId != null" >
        operator_type_id = #{record.operatorTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.operateDetail != null" >
        operate_detail = #{record.operateDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_refund_history
    set id = #{record.id,jdbcType=BIGINT},
      refund_flow_id = #{record.refundFlowId,jdbcType=VARCHAR},
      operate_id = #{record.operateId,jdbcType=INTEGER},
      operator_type_id = #{record.operatorTypeId,jdbcType=INTEGER},
      operate_detail = #{record.operateDetail,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itk.payment.model.RefundHistory" >
    update t_refund_history
    <set >
      <if test="refundFlowId != null" >
        refund_flow_id = #{refundFlowId,jdbcType=VARCHAR},
      </if>
      <if test="operateId != null" >
        operate_id = #{operateId,jdbcType=INTEGER},
      </if>
      <if test="operatorTypeId != null" >
        operator_type_id = #{operatorTypeId,jdbcType=INTEGER},
      </if>
      <if test="operateDetail != null" >
        operate_detail = #{operateDetail,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itk.payment.model.RefundHistory" >
    update t_refund_history
    set refund_flow_id = #{refundFlowId,jdbcType=VARCHAR},
      operate_id = #{operateId,jdbcType=INTEGER},
      operator_type_id = #{operatorTypeId,jdbcType=INTEGER},
      operate_detail = #{operateDetail,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>