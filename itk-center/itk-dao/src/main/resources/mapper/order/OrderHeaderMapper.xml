<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itk.order.mapper.OrderHeaderMapper" >
  <resultMap id="BaseResultMap" type="com.itk.order.model.OrderHeader" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="is_del" property="isDel" jdbcType="INTEGER" />
    <result column="is_expired" property="isExpired" jdbcType="INTEGER" />
    <result column="address_id" property="addressId" jdbcType="INTEGER" />
    <result column="actual_amount" property="actualAmount" jdbcType="DECIMAL" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="shop_id" property="shopId" jdbcType="BIGINT" />
    <result column="allocation_from_time" property="allocationFromTime" jdbcType="TIMESTAMP" />
    <result column="allocation_to_time" property="allocationToTime" jdbcType="TIMESTAMP" />
    <result column="allocation_type" property="allocationType" jdbcType="INTEGER" />
    <result column="pick_self_location_id" property="pickSelfLocationId" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="arrival_time" property="arrivalTime" jdbcType="TIMESTAMP" />
    <result column="complete_time" property="completeTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_id, status, is_del, is_expired, address_id, actual_amount, total_amount, 
    shop_id, allocation_from_time, allocation_to_time, allocation_type, pick_self_location_id, 
    comment, arrival_time, complete_time, create_time, modify_time, user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.itk.order.model.OrderHeaderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order_header
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_order_header
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_order_header
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.itk.order.model.OrderHeaderExample" >
    delete from t_order_header
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itk.order.model.OrderHeader" >
    insert into t_order_header (id, order_id, status, 
      is_del, is_expired, address_id, 
      actual_amount, total_amount, shop_id, 
      allocation_from_time, allocation_to_time, 
      allocation_type, pick_self_location_id, comment, 
      arrival_time, complete_time, create_time, 
      modify_time, user_id)
    values (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{isDel,jdbcType=INTEGER}, #{isExpired,jdbcType=INTEGER}, #{addressId,jdbcType=INTEGER}, 
      #{actualAmount,jdbcType=DECIMAL}, #{totalAmount,jdbcType=DECIMAL}, #{shopId,jdbcType=BIGINT}, 
      #{allocationFromTime,jdbcType=TIMESTAMP}, #{allocationToTime,jdbcType=TIMESTAMP}, 
      #{allocationType,jdbcType=INTEGER}, #{pickSelfLocationId,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}, 
      #{arrivalTime,jdbcType=TIMESTAMP}, #{completeTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.itk.order.model.OrderHeader" >
    insert into t_order_header
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
      <if test="isExpired != null" >
        is_expired,
      </if>
      <if test="addressId != null" >
        address_id,
      </if>
      <if test="actualAmount != null" >
        actual_amount,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="allocationFromTime != null" >
        allocation_from_time,
      </if>
      <if test="allocationToTime != null" >
        allocation_to_time,
      </if>
      <if test="allocationType != null" >
        allocation_type,
      </if>
      <if test="pickSelfLocationId != null" >
        pick_self_location_id,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="arrivalTime != null" >
        arrival_time,
      </if>
      <if test="completeTime != null" >
        complete_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="isExpired != null" >
        #{isExpired,jdbcType=INTEGER},
      </if>
      <if test="addressId != null" >
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="actualAmount != null" >
        #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="allocationFromTime != null" >
        #{allocationFromTime,jdbcType=TIMESTAMP},
      </if>
      <if test="allocationToTime != null" >
        #{allocationToTime,jdbcType=TIMESTAMP},
      </if>
      <if test="allocationType != null" >
        #{allocationType,jdbcType=INTEGER},
      </if>
      <if test="pickSelfLocationId != null" >
        #{pickSelfLocationId,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="arrivalTime != null" >
        #{arrivalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="completeTime != null" >
        #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itk.order.model.OrderHeaderExample" resultType="java.lang.Integer" >
    select count(*) from t_order_header
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_order_header
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.isExpired != null" >
        is_expired = #{record.isExpired,jdbcType=INTEGER},
      </if>
      <if test="record.addressId != null" >
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
      <if test="record.actualAmount != null" >
        actual_amount = #{record.actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalAmount != null" >
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.allocationFromTime != null" >
        allocation_from_time = #{record.allocationFromTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.allocationToTime != null" >
        allocation_to_time = #{record.allocationToTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.allocationType != null" >
        allocation_type = #{record.allocationType,jdbcType=INTEGER},
      </if>
      <if test="record.pickSelfLocationId != null" >
        pick_self_location_id = #{record.pickSelfLocationId,jdbcType=INTEGER},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.arrivalTime != null" >
        arrival_time = #{record.arrivalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.completeTime != null" >
        complete_time = #{record.completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_order_header
    set id = #{record.id,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      is_del = #{record.isDel,jdbcType=INTEGER},
      is_expired = #{record.isExpired,jdbcType=INTEGER},
      address_id = #{record.addressId,jdbcType=INTEGER},
      actual_amount = #{record.actualAmount,jdbcType=DECIMAL},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      allocation_from_time = #{record.allocationFromTime,jdbcType=TIMESTAMP},
      allocation_to_time = #{record.allocationToTime,jdbcType=TIMESTAMP},
      allocation_type = #{record.allocationType,jdbcType=INTEGER},
      pick_self_location_id = #{record.pickSelfLocationId,jdbcType=INTEGER},
      comment = #{record.comment,jdbcType=VARCHAR},
      arrival_time = #{record.arrivalTime,jdbcType=TIMESTAMP},
      complete_time = #{record.completeTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itk.order.model.OrderHeader" >
    update t_order_header
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="isExpired != null" >
        is_expired = #{isExpired,jdbcType=INTEGER},
      </if>
      <if test="addressId != null" >
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="actualAmount != null" >
        actual_amount = #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="allocationFromTime != null" >
        allocation_from_time = #{allocationFromTime,jdbcType=TIMESTAMP},
      </if>
      <if test="allocationToTime != null" >
        allocation_to_time = #{allocationToTime,jdbcType=TIMESTAMP},
      </if>
      <if test="allocationType != null" >
        allocation_type = #{allocationType,jdbcType=INTEGER},
      </if>
      <if test="pickSelfLocationId != null" >
        pick_self_location_id = #{pickSelfLocationId,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="arrivalTime != null" >
        arrival_time = #{arrivalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="completeTime != null" >
        complete_time = #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itk.order.model.OrderHeader" >
    update t_order_header
    set order_id = #{orderId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER},
      is_expired = #{isExpired,jdbcType=INTEGER},
      address_id = #{addressId,jdbcType=INTEGER},
      actual_amount = #{actualAmount,jdbcType=DECIMAL},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      shop_id = #{shopId,jdbcType=BIGINT},
      allocation_from_time = #{allocationFromTime,jdbcType=TIMESTAMP},
      allocation_to_time = #{allocationToTime,jdbcType=TIMESTAMP},
      allocation_type = #{allocationType,jdbcType=INTEGER},
      pick_self_location_id = #{pickSelfLocationId,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      arrival_time = #{arrivalTime,jdbcType=TIMESTAMP},
      complete_time = #{completeTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>